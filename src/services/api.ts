/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/category": {
    /** Get Cattegory by ID */
    get: {
      parameters: {
        query: {
          /** @description ID of the category */
          id: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["Category"];
          };
        };
        /** @description Invalid ID */
        400: {
          content: never;
        };
        /** @description Category not found */
        404: {
          content: never;
        };
      };
    };
  };
  "/categories": {
    /** Get all categories */
    get: {
      responses: {
        /** @description successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["CategoriesResponse"];
          };
        };
      };
    };
  };
  "/product": {
    /** Get Product by ID */
    get: {
      parameters: {
        query: {
          /** @description ID of the product */
          id: string;
        };
      };
      responses: {
        /** @description New response */
        200: {
          content: {
            "application/json": components["schemas"]["Product"];
          };
        };
        /** @description Invalid ID */
        400: {
          content: never;
        };
        /** @description Product not found */
        404: {
          content: never;
        };
      };
    };
  };
  "/products": {
    /** Get all products */
    get: {
      parameters: {
        query: {
          /** @description ID of the category */
          categoryId: string;
          /** @description Limit of the products */
          limit?: string;
          /** @description Offset of the products */
          offset?: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["ProductsResponse"];
          };
        };
        /** @description Invalid category ID or Offset is beyond the number of products */
        400: {
          content: never;
        };
      };
    };
  };
  "/offer": {
    /** Get Offer by ID */
    get: {
      parameters: {
        query: {
          /** @description ID of the offer */
          id: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["Offer"];
          };
        };
        /** @description Invalid ID */
        400: {
          content: never;
        };
        /** @description Offer not found */
        404: {
          content: never;
        };
      };
    };
  };
  "/offers": {
    /** Get all offers */
    get: {
      parameters: {
        query: {
          /** @description ID of the product */
          productId: string;
          /** @description Limit of the offers */
          limit?: string;
          /** @description Offset of the offers */
          offset?: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["OffersResponse"];
          };
        };
        /** @description Invalid product ID or Offset is beyond the number of offers */
        400: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Category: {
      /** Format: int32 */
      id: number;
      title: string;
    };
    Product: {
      /** Format: int32 */
      id: number;
      /** Format: int32 */
      categoryId: number;
      title: string;
    };
    Offer: {
      /** Format: int32 */
      id: number;
      /** Format: int32 */
      productId: number;
      title: string;
      description: string;
      /** Format: uri */
      url: string;
      /** Format: uri */
      imgUrl: string;
      price: number;
      /** Format: float */
    };
    PageInfo: {
      offset?: number;
      limit?: number;
      total?: number;
    };
    CategoriesResponse: {
      pageInfo?: components["schemas"]["PageInfo"];
      data?: components["schemas"]["Category"][];
    };
    ProductsResponse: {
      pageInfo?: components["schemas"]["PageInfo"];
      data?: components["schemas"]["Product"][];
    };
    OffersResponse: {
      pageInfo?: components["schemas"]["PageInfo"];
      data?: components["schemas"]["Offer"][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
